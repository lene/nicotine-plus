name: Nicotine+ CI

on: [push]

env:
  # workaround until figuring out how to dynamically read this from source code
  NICOTINE_VERSION: 1.4.3

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-latest]
        python: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        sudo apt-get install libgeoip-dev libgirepository1.0-dev
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 nicotine pynicotine plugins --ignore=E402,E501,W503,W504
    - name: Unit tests
      env:
        PYTHONPATH: .
      run: |
        pip install pytest
        pytest tests/unit

  package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get install devscripts debhelper dh-python python-all \
          python-gobject-2 python-setuptools quilt python3-pyatspi python3-pytest
    - name: Build binary .deb
      run: |
        dpkg-buildpackage -b -rfakeroot -us -uc
        echo ../nicotine_${NICOTINE_VERSION}_all.deb
        ls -l  ../nicotine_${NICOTINE_VERSION}_all.deb
    - name: Archive binary .deb artifacts
      uses: actions/upload-artifact@v1
      with:
        name: nicotine.deb
        # path does not work with env variables, so cannot use #NICOTINE_VESION here (damn)
        path: ../nicotine_1.4.3_all.deb
    - name: Clean binary .deb
      run: |
        mkdir ../binary
        mv ../nicotine_${NICOTINE_VERSION}_all.deb ../binary
    - name: Build source .deb
      run: |
        pushd ..
        tar --exclude-vcs -jcf nicotine_${NICOTINE_VERSION}.orig.tar.bz2 nicotine-plus
        popd
        dpkg-buildpackage -S -rfakeroot -us -uc
    - name: Collect source .deb artifacts
      run: |
        mkdir ../source
        mv ../nicotine_${NICOTINE_VERSION}* ../source
    - name: Archive source .deb artifacts
      uses: actions/upload-artifact@v1
      with:
        name: nicotine-debuild-artifacts
        path: ../source
    - name: Run autopkgtest on source .deb artifacts
      run: |
        sudo apt-get -y install autopkgtest
        sudo autopkgtest ../source/nicotine_${NICOTINE_VERSION}_source.changes -- null

  test-install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-latest]
    needs: package    
    steps:
    - name: Download.deb to ${{ matrix.os }}
      uses: actions/download-artifact@v1
      with:
        name: nicotine.deb
    - name: Test binary .deb installs on ${{ matrix.os }}
      run: |
        sudo apt-get install ./nicotine.deb/nicotine_${NICOTINE_VERSION}_all.deb
        nicotine --version | grep ${NICOTINE_VERSION}

  test-install-xenial:
    runs-on: ubuntu-16.04
    if: false  # disabled for now
    needs: package
    steps:
      - name: Download.deb to ubuntu-16.04
        uses: actions/download-artifact@v1
        with:
          name: nicotine.deb
#      - name: Bring ubuntu-16.04 up to date
#        run: |
#          sudo apt-get update
#          sudo apt-get upgrade
      - name: Install Python 3.6
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt-get update
          sudo apt-get install python3.6
      - name: Test binary .deb installs on ubuntu-16.04
        run: |
          sudo apt-get install ./nicotine.deb/nicotine_${NICOTINE_VERSION}_all.deb
          nicotine --version | grep ${NICOTINE_VERSION}
